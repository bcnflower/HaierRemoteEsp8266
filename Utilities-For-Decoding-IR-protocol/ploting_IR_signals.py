import numpy as np
import matplotlib.pyplot as plt


def lines(ax, pos, *args, **kwargs):
    if ax == 'x':
        for p in pos:
            plt.axvline(p, *args, **kwargs)
    else:
        for p in pos:
            plt.axhline(p, *args, **kwargs)



p = "+3043,-3043,+3043,-4420,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-548,+548,-1691,+548,-1691,+548,-548,+548,-1691,+548,-1691,+548,-548,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-1691,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-1691,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-1691,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-1691,+548,-548,+548,-1691,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-1691,+548,-548,+548,-1691,+548,-548,+548,-1691,+548,-50000"
p = p.replace("1691",str(548*3))
p = p.split(",")
print("No of Samples=",len(p))
p = [int(x) for x in p]
p=p[:100]
d = [1 if(x<0) else 0 for x in p]
v = 0
t = [x if(x>0) else -1*x for x in p]
for i,x in enumerate(t):
    t[i] = v
    v+=x


# print(d)
# print(t)

# data = [1, 0, 0, 1, 1, 0, 1, 0]
xs = np.repeat(t, 2)
ys = np.repeat(d, 2)
lines('x',np.arange (410, v, 548),color='.5', linewidth=.5)
xs = xs[1:]
ys = ys[:-1]
# print(xs)
# print(ys)
plt.plot(xs, ys, linewidth = 1)
# plt.ylim(-0.5, 1.5)
plt.show()